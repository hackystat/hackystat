<project name="integration.macros" default="svn">

  <macrodef name="svn.checkout">
    <attribute name="svn.url" />
    <attribute name="local.workspace" />
    <attribute name="username" />
    <attribute name="password" />
    <sequential>
      <java classname="org.tmatesoft.svn.cli.SVN" fork="true" failonerror="true">
        <arg value="checkout" />
        <arg value="@{svn.url}" />
        <arg value="@{local.workspace}" />
        <arg value="--username" />
        <arg value="@{username}" />
        <arg value="--password" />
        <arg value="@{password}" />
        <classpath refid="svnkit.path" />
      </java>
    </sequential>
  </macrodef>

  <macrodef name="svn.checkout.anonymous">
    <attribute name="svn.url" />
    <attribute name="local.workspace" />
    <sequential>
      <java classname="org.tmatesoft.svn.cli.SVN" fork="true" failonerror="true">
        <arg value="checkout" />
        <arg value="@{svn.url}" />
        <arg value="@{local.workspace}" />
        <classpath refid="svnkit.path" />
      </java>
    </sequential>
  </macrodef>

  <macrodef name="svn.commit">
    <attribute name="svn.message" />
    <attribute name="svn.username" />
    <attribute name="svn.password" />
    <attribute name="svn.module" />
    <sequential>
      <java classname="org.tmatesoft.svn.cli.SVN" fork="true" failonerror="true">
        <arg value="commit" />
        <arg value="--message" />
        <arg value="'@{svn.message}'" />
        <arg value="--username" />
        <arg value="@{svn.username}" />
        <arg value="--password" />
        <arg value="@{svn.password}" />
        <arg value="@{svn.module}" />
        <classpath refid="svnkit.path" />
      </java>
    </sequential>
  </macrodef>
  
  <macrodef name="module.javadoc.daily">
     <attribute name="svn.username" />
     <attribute name="svn.password" />
     <attribute name="module.name" />
     <sequential>
       <module.checkout.anonymous module.name="@{module.name}" />
       <module.checkout.javadoc module.name="@{module.name}" svn.username="@{svn.username}" svn.password="@{svn.password}" />
       <module.javadoc module.name="@{module.name}" />
       <module.commit.javadoc module.name="@{module.name}" svn.username="@{svn.username}" svn.password="@{svn.password}" />
     </sequential>
   </macrodef>

  <macrodef name="module.commit.javadoc">
    <attribute name="svn.username" />
    <attribute name="svn.password" />
    <attribute name="module.name" />
    <sequential>
      <echo message="Committing @{module.name}" />
      <!-- First we add any new files. -->
      <java classname="org.tmatesoft.svn.cli.SVN" fork="true" failonerror="true">
        <arg value="add" />
        <arg value="--auto-props" />
        <arg value="--force" />
        
        <arg value="--username" />
        <arg value="@{svn.username}" />
        <arg value="--password" />
        <arg value="@{svn.password}" />
        <arg value="${system.build.dir}/javadoc/@{module.name}" />
        <classpath refid="svnkit.path" />
      </java>

      <!-- Now we commit the changes. -->
      <java classname="org.tmatesoft.svn.cli.SVN" fork="true" failonerror="true">
        <arg value="commit" />
        <arg value="--message" />
        <arg value="'Committing updated version of JavaDocs.'" />
        <arg value="--username" />
        <arg value="@{svn.username}" />
        <arg value="--password" />
        <arg value="@{svn.password}" />
        <arg value="${system.build.dir}/javadoc/@{module.name}" />
        <classpath refid="svnkit.path" />
      </java>
    </sequential>
  </macrodef>

  <macrodef name="svn.import.javadoc">
    <attribute name="svn.username" />
    <attribute name="svn.password" />
    <attribute name="module.name" />
    <sequential>
      <java classname="org.tmatesoft.svn.cli.SVN" fork="true" failonerror="true">
        <arg value="import" />
        <arg value="--auto-props" />
        <arg value="--message" />
        <arg value="'Importing Javadocs for this module.'" />
        <arg value="--username" />
        <arg value="@{svn.username}" />
        <arg value="--password" />
        <arg value="@{svn.password}" />
        <arg value="${basedir}/javadoc/@{module.name}" />
        <arg value="https://@{module.name}.googlecode.com/svn/javadoc/" />
        <classpath refid="svnkit.path" />
      </java>
    </sequential>
  </macrodef>

  <macrodef name="module.checkout.anonymous">
    <attribute name="module.name" />
    <sequential>
      <echo message="Checking out @{module.name}" />
      <mkdir dir="${system.build.dir}/@{module.name}" />
      <svn.checkout.anonymous svn.url="http://@{module.name}.googlecode.com/svn/trunk/" local.workspace="${system.build.dir}/@{module.name}" />
    </sequential>
  </macrodef>

  <macrodef name="module.checkout">
    <attribute name="svn.username" />
    <attribute name="svn.password" />
    <attribute name="module.name" />
    <sequential>
      <echo message="Checkout @{module.name} into ${system.build.dir}/@{module.name}" />
      <mkdir dir="${system.build.dir}/@{module.name}" />
      <svn.checkout svn.url="https://@{module.name}.googlecode.com/svn/trunk/" local.workspace="${system.build.dir}/@{module.name}" username="@{svn.username}" password="@{svn.password}" />
    </sequential>
  </macrodef>

  <macrodef name="module.checkout.wiki">
    <attribute name="svn.username" />
    <attribute name="svn.password" />
    <attribute name="module.name" />
    <sequential>
      <echo message="Checking out @{module.name}" />
      <mkdir dir="${system.build.dir}/wiki-@{module.name}" />
      <svn.checkout svn.url="https://@{module.name}.googlecode.com/svn/wiki/" local.workspace="${system.build.dir}/wiki-@{module.name}" username="@{svn.username}" password="@{svn.password}" />
    </sequential>
  </macrodef>

  <macrodef name="module.checkout.javadoc">
    <attribute name="svn.username" />
    <attribute name="svn.password" />
    <attribute name="module.name" />
    <sequential>
      <echo message="Checking out @{module.name}" />
      <mkdir dir="${system.build.dir}/javadoc/@{module.name}" />
      <svn.checkout svn.url="https://@{module.name}.googlecode.com/svn/javadoc/" local.workspace="${system.build.dir}/javadoc/@{module.name}" username="@{svn.username}" password="@{svn.password}" />
    </sequential>
  </macrodef>
  
  <macrodef name="module.refresh.javadoc">
    <attribute name="svn.username" />
    <attribute name="svn.password" />
    <attribute name="module.name" />
    <sequential>
      <module.checkout.javadoc module.name="@{module.name}" svn.username="@{svn.username}" svn.password="@{svn.password}" />
      <module.javadoc module.name="@{module.name}" />
      <module.commit.javadoc module.name="@{module.name}" svn.username="@{svn.username}" svn.password="@{svn.password}" />  
    </sequential>
  </macrodef>

  <macrodef name="buildModule">
    <attribute name="svn.username" />
    <attribute name="svn.password" />
    <attribute name="module.name" />
    <sequential>
      <ant dir="${system.build.dir}/@{module.name}" antfile="verify.build.xml" />
      <ant dir="${system.build.dir}/@{module.name}" antfile="dist.build.xml" />
    </sequential>
  </macrodef>
  
  <macrodef name="buildModuleNoJUnit">
      <attribute name="svn.username" />
      <attribute name="svn.password" />
      <attribute name="module.name" />
      <sequential>
        <ant dir="${system.build.dir}/@{module.name}" antfile="checkstyle.build.xml" />
        <ant dir="${system.build.dir}/@{module.name}" antfile="pmd.build.xml" />
        <ant dir="${system.build.dir}/@{module.name}" antfile="findbugs.build.xml" />
        <ant dir="${system.build.dir}/@{module.name}" antfile="dist.build.xml" />
      </sequential>
    </macrodef>

  <macrodef name="module.javadoc">
    <attribute name="module.name" />
    <sequential>
      <ant dir="${system.build.dir}/@{module.name}" antfile="javadoc.build.xml">
        <property name="javadoc.dir" location="${system.build.dir}/javadoc/@{module.name}" />
      </ant>
    </sequential>
  </macrodef>



  <macrodef name="copyServiceDist">
    <attribute name="module.name" />
    <sequential>
      <mkdir dir="${system.services.dir}/dist" />
      <copy file="${system.build.dir}/@{module.name}/build/dist/@{module.name}-${version}.zip" todir="${system.services.dir}/dist" />
    </sequential>
  </macrodef>

  <macrodef name="copyServiceBin">
    <attribute name="module.name" />
    <attribute name="bin.name" />
    <sequential>
      <mkdir dir="${system.services.dir}/bin/@{module.name}" />
      <copy file="${system.build.dir}/@{module.name}/@{bin.name}" todir="${system.services.dir}/bin/@{module.name}" />
    </sequential>
  </macrodef>

  <macrodef name="copyServiceBinDir">
    <attribute name="module.name" />
    <attribute name="dir.name" />
    <sequential>
      <mkdir dir="${system.services.dir}/bin/@{module.name}/@{dir.name}" />
      <copy todir="${system.services.dir}/bin/@{module.name}/@{dir.name}">
        <fileset dir="${system.build.dir}/@{module.name}/@{dir.name}" />
      </copy>
    </sequential>
  </macrodef>
  
  <macrodef name="copySensorBinDir">
     <attribute name="module.name" />
     <attribute name="dir.name" />
     <sequential>
       <mkdir dir="${system.sensors.dir}/bin/@{module.name}/@{dir.name}" />
       <copy todir="${system.sensors.dir}/bin/@{module.name}/@{dir.name}">
         <fileset dir="${system.build.dir}/@{module.name}/@{dir.name}" />
       </copy>
     </sequential>
   </macrodef>

  <macrodef name="copySensorDist">
    <attribute name="module.name" />
    <sequential>
      <mkdir dir="${system.sensors.dir}/dist" />
      <copy file="${system.build.dir}/@{module.name}/build/dist/@{module.name}-${version}.zip" todir="${system.sensors.dir}/dist" />
    </sequential>
  </macrodef>

  <macrodef name="copySensorBin">
    <attribute name="module.name" />
    <attribute name="bin.name" />
    <attribute name="bin.subdir" default="" />
    <!-- must start with '/' if supplied. For Eclipse sensor. -->
    <sequential>
      <mkdir dir="${system.sensors.dir}/bin/@{module.name}@{bin.subdir}" />
      <copy file="${system.build.dir}/@{module.name}@{bin.subdir}/@{bin.name}" todir="${system.sensors.dir}/bin/@{module.name}@{bin.subdir}" />
    </sequential>
  </macrodef>

  <macrodef name="jarModule">
    <attribute name="module.name" />
    <sequential>
      <ant dir="${system.build.dir}/@{module.name}" antfile="jar.build.xml" />
    </sequential>
  </macrodef>
  
  <macrodef name="cleanAndJarModule">
     <attribute name="module.name" />
     <sequential>
       <ant dir="${system.build.dir}/@{module.name}" antfile="build.xml" target="clean" />
       <ant dir="${system.build.dir}/@{module.name}" antfile="jar.build.xml" />
     </sequential>
   </macrodef>

  <macrodef name="runHudsonTask">
    <attribute name="task.name" />
    <sequential>
      <!-- Current total: 18 -->
      <ant dir="${system.build.dir}/${utilities.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${sensorbase.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${dpd.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${telemetry.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${sensorshell.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${ant.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${eclipse.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${emacs.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${pb.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <!--
      <ant dir="${system.build.dir}/${pv.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${sdb.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${sdv.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${tv.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      -->
      <ant dir="${system.build.dir}/${simdata.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${stackyhack.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${systemstatus.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${vim.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
      <ant dir="${system.build.dir}/${xmldata.system.name}" antfile="hudson.build.xml" target="@{task.name}" />
    </sequential>
  </macrodef>
  
  
  
  <macrodef name="runTask">
    <attribute name="task.name" />
    <attribute name="build.file.name" />
     <sequential>
       <!-- Current total: 18 -->
       <ant dir="${system.build.dir}/${ant.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${dpd.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${eclipse.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${emacs.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <!--
       <ant dir="${system.build.dir}/${pv.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${sdb.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${sdv.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${tv.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       -->
       <ant dir="${system.build.dir}/${pb.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${sensorbase.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${sensorshell.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${simdata.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${stackyhack.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${systemstatus.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${telemetry.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${utilities.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${vim.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
       <ant dir="${system.build.dir}/${xmldata.system.name}" antfile="@{build.file.name}" target="@{task.name}" />
     </sequential>
   </macrodef>
  
  <macrodef name="svn2008">
     <attribute name="project" />
      <sequential>
        <hacky-svn  
          repositoryName="Hackystat"
          repositoryUrl="http://@{project}.googlecode.com/svn/trunk"
          fileNamePrefix="/hackystat-integration/@{project}"
          fromDate="2008-01-01"
          toDate="2008-07-12"
          defaultHackystatAccount="${env.HACKYSTAT_SVN_DEFAULT_ACCOUNT}"
          defaultHackystatPassword="${env.HACKYSTAT_SVN_DEFAULT_PASSWORD}" 
          defaultHackystatSensorbase="http://dasha.ics.hawaii.edu:9876/sensorbase"
          verbose="true" 
        />
      </sequential>
    </macrodef>
  
  <macrodef name="svn.module.tickertape">
      <attribute name="module" />
      <attribute name="dir" default="trunk"/>
      <attribute name="lastIntervalInMinutes" default="10"/>
    
       <sequential>
         <property environment="env"/>
         <available file="${env.HACKYSTAT_ANTSENSORS_HOME}/antsensors.jar" type="file" property="hackystat.antsensors.available"/>
         <fail message="${env.HACKYSTAT_ANTSENSORS_HOME}/antsensors.jar could not be found." unless="hackystat.antsensors.available"/>   
         <taskdef resource="antlib.xml" classpath="${env.HACKYSTAT_ANTSENSORS_HOME}/antsensors.jar"/>

         <hacky-svn  
           repositoryName="Hackystat"
           repositoryUrl="http://@{module}.googlecode.com/svn/@{dir}"
           fileNamePrefix="/hackystat-integration/@{module}"
           lastIntervalInMinutes="@{lastIntervalInMinutes}"
           defaultHackystatAccount="${env.HACKYSTAT_SVN_DEFAULT_ACCOUNT}"
           defaultHackystatPassword="${env.HACKYSTAT_SVN_DEFAULT_PASSWORD}" 
           defaultHackystatSensorbase="http://dasha.ics.hawaii.edu:9876/sensorbase"
           verbose="true" 
         />
       </sequential>
     </macrodef>
  
  <macrodef name="svn.module.daily">
      <attribute name="module" />
      <attribute name="dir" default="trunk"/>
       <sequential>
         <property environment="env"/>
         <available file="${env.HACKYSTAT_ANTSENSORS_HOME}/antsensors.jar" type="file" property="hackystat.antsensors.available"/>
         <fail message="${env.HACKYSTAT_ANTSENSORS_HOME}/antsensors.jar could not be found." unless="hackystat.antsensors.available"/>   
         <taskdef resource="antlib.xml" classpath="${env.HACKYSTAT_ANTSENSORS_HOME}/antsensors.jar"/>

         <hacky-svn  
           repositoryName="Hackystat"
           repositoryUrl="http://@{module}.googlecode.com/svn/@{dir}"
           fileNamePrefix="/hackystat-integration/@{module}"
           defaultHackystatAccount="${env.HACKYSTAT_SVN_DEFAULT_ACCOUNT}"
           defaultHackystatPassword="${env.HACKYSTAT_SVN_DEFAULT_PASSWORD}" 
           defaultHackystatSensorbase="http://dasha.ics.hawaii.edu:9876/sensorbase"
           verbose="true" 
         />
       </sequential>
     </macrodef>

</project>