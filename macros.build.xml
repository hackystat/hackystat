<project name="macros" default="svn">

<!--
 Note: if you get the following certificate issue, just type 'p' at the command line:
  svnCheckout:
       [java] Error validating server certificate for 'https://hackystat-sensorbase-uh.googlecode.com:443':
       [java]  - The certificate is not issued by a trusted authority. Use the
       [java]    fingerprint to validate the certificate manually!
       [java]  - The certificate hostname does not match.
       [java] Certificate information:
       [java]  - Subject: CN=*.googlecode.com, O=Google Inc, L=Mountain View, ST=California, C=US
       [java]  - Valid: from Fri Jun 23 06:05:41 HST 2006 until Sat Jun 21 01:45:36 HST 2008
       [java]  - Issuer: EMAILADDRESS=premium-server@thawte.com, CN=Thawte Premium Server CA, OU=Certification Services Division, O=Thawte Consulting cc, L=Cape Town, ST=Western Cape, C=ZA
       [java]  - Fingerprint: 89:87:5e:ca:0b:03:d2:83:db:7b:3f:20:5d:d0:76:c7:76:6b:cb:b2
  p
       [java] svn: '/Users/johnson/svn-google/hackystat/build/sensorbase' is already a working copy for a different URL
       [java] (R)eject, accept (t)emporarily or accept (p)ermanently? 
       [java] Java Result: 1
-->
  
  <macrodef name="svn.checkout">
    <attribute name="svn.url"/>
    <attribute name="local.workspace"/>
    <attribute name="username"/>
    <attribute name="password"/>
      <sequential>
          <java classname="org.tmatesoft.svn.cli.SVN" fork="true">
            <arg value="checkout"/>
            <arg value="@{svn.url}"/>
            <arg value="@{local.workspace}"/>
            <arg value="--username"/>
            <arg value="@{username}"/>
            <arg value="--password"/>
            <arg value="@{password}"/>
            <classpath>
              <pathelement location="${env.SVNKIT_HOME}/ganymed.jar" />
              <pathelement location="${env.SVNKIT_HOME}/svnkit.jar" />
              <pathelement location="${env.SVNKIT_HOME}/svnkit-cli.jar" />
            </classpath>
          </java>
      </sequential>
    </macrodef>  
  
  <macrodef name="buildModule">
    <attribute name="svn.username"/>
    <attribute name="svn.password"/>
    <attribute name="module.name"/>
    <sequential>
      <mkdir dir="${system.build.dir}/@{module.name}"/>
      <svn.checkout svn.url="https://@{module.name}.googlecode.com/svn/trunk/" 
                    local.workspace="${system.build.dir}/@{module.name}"
                    username="@{svn.username}" 
                    password="@{svn.password}" />
      <ant dir="${system.build.dir}/@{module.name}" antfile="verify.build.xml" />
      <ant dir="${system.build.dir}/@{module.name}" antfile="dist.build.xml" />
    </sequential>
  </macrodef>

  <macrodef name="copyDist">
   <attribute name="module.name"/>
   <sequential>
     <copy file="${system.build.dir}/@{module.name}/build/dist/@{module.name}-${version}.zip" 
           todir="${system.zip.dir}"/>
   </sequential>
  </macrodef>

  <macrodef name="copyJar">
   <attribute name="module.name"/>
   <attribute name="jar.name"/>
   <sequential>
     <copy file="${system.build.dir}/@{module.name}/@{jar.name}.jar" todir="${system.jar.dir}"/>
   </sequential>
  </macrodef>

  </project>