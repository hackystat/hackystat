<project name="build" default="check-install" xmlns:ivy="antlib:org.apache.ivy.ant">
  <description>
    Provides targets for Hackystat project checkouts, status, and commits.
    Invoke with "ant install" to install/update Ivy and related files.
  </description>

  <!--
    The checkout.{module} targets, in alphabetical order.
    Modules will also checkout all dependent modules.
  -->

  <target name="checkout.all" depends="check-install,
    checkout.hackystat-analysis-dailyprojectdata,
    checkout.hackystat-analysis-telemetry,
    checkout.hackystat-sensor-ant,
    checkout.hackystat-sensor-eclipse,
    checkout.hackystat-sensor-emacs,
    checkout.hackystat-sensor-example,
    checkout.hackystat-sensor-shell,
    checkout.hackystat-sensor-vim,
    checkout.hackystat-sensor-xmldata,
    checkout.hackystat-sensorbase-postgres,
    checkout.hackystat-sensorbase-simdata,
    checkout.hackystat-sensorbase-uh,
    checkout.hackystat-ui-systemstatus,
    checkout.hackystat-ui-tickertape,
    checkout.hackystat-ui-wicket,
    checkout.hackystat-utilities" />

  <target name="checkout.hackystat-analysis-dailyprojectdata" depends="check-install, checkout.hackystat-sensorbase-uh">
    <git.clone module.name="hackystat-analysis-dailyprojectdata" />
  </target>

  <target name="checkout.hackystat-analysis-telemetry" depends="check-install, checkout.hackystat-analysis-dailyprojectdata">
    <git.clone module.name="hackystat-analysis-telemetry" />
  </target>

  <target name="checkout.hackystat-developer-example" depends="check-install, checkout.hackystat-analysis-telemetry">
    <git.clone module.name="hackystat-developer-example" />
  </target>

  <target name="checkout.hackystat-sensor-ant" depends="check-install, checkout.hackystat-sensor-shell">
    <git.clone module.name="hackystat-sensor-ant" />
  </target>

  <target name="checkout.hackystat-sensor-eclipse" depends="check-install, checkout.hackystat-sensor-shell">
    <git.clone module.name="hackystat-sensor-eclipse" />
  </target>

  <target name="checkout.hackystat-sensor-emacs" depends="check-install, checkout.hackystat-sensor-shell">
    <git.clone module.name="hackystat-sensor-emacs" />
  </target>

  <target name="checkout.hackystat-sensor-example" depends="check-install, checkout.hackystat-sensor-ant">
    <git.clone module.name="hackystat-sensor-example" />
  </target>

  <target name="checkout.hackystat-sensor-shell" depends="check-install, checkout.hackystat-sensorbase-uh">
    <git.clone module.name="hackystat-sensor-shell" />
  </target>

  <target name="checkout.hackystat-sensor-vim" depends="check-install, checkout.hackystat-sensor-shell">
    <git.clone module.name="hackystat-sensor-vim" />
  </target>

  <target name="checkout.hackystat-sensor-xmldata" depends="check-install, checkout.hackystat-sensor-shell">
    <git.clone module.name="hackystat-sensor-xmldata" />
  </target>

  <target name="checkout.hackystat-sensorbase-postgres" depends="check-install, checkout.hackystat-sensorbase-uh">
    <git.clone module.name="hackystat-sensorbase-postgres" />
  </target>

  <target name="checkout.hackystat-sensorbase-simdata" depends="check-install, checkout.hackystat-sensorbase-uh">
    <git.clone module.name="hackystat-sensorbase-simdata" />
  </target>

  <target name="checkout.hackystat-sensorbase-uh" depends="check-install, checkout.hackystat-utilities">
    <git.clone module.name="hackystat-sensorbase-uh" />
  </target>

  <target name="checkout.hackystat-ui-systemstatus" depends="check-install, checkout.hackystat-sensorbase-uh">
    <git.clone module.name="hackystat-ui-systemstatus" />
  </target>

  <target name="checkout.hackystat-ui-tickertape" depends="check-install, checkout.hackystat-analysis-telemetry">
    <git.clone module.name="hackystat-ui-tickertape" />
  </target>

  <target name="checkout.hackystat-ui-wicket" depends="check-install, checkout.hackystat-analysis-telemetry, checkout.hackystat-sensorbase-simdata">
    <git.clone module.name="hackystat-ui-wicket" />
  </target>

  <target name="checkout.hackystat-utilities" depends="check-install">
    <git.clone module.name="hackystat-utilities" />
  </target>

  <!--
     The checkout.anonymous.{module} targets, in alphabetical order.
     Modules will also checkout all dependent modules.
   -->

  <target name="checkout.anonymous.all" depends="check-install,
     checkout.anonymous.hackystat-analysis-dailyprojectdata,
     checkout.anonymous.hackystat-analysis-telemetry,
     checkout.anonymous.hackystat-sensor-ant,
     checkout.anonymous.hackystat-sensor-eclipse,
     checkout.anonymous.hackystat-sensor-emacs,
     checkout.anonymous.hackystat-sensor-example,
     checkout.anonymous.hackystat-sensor-shell,
     checkout.anonymous.hackystat-sensor-vim,
     checkout.anonymous.hackystat-sensor-xmldata,
     checkout.anonymous.hackystat-sensorbase-postgres,
     checkout.anonymous.hackystat-sensorbase-simdata,
     checkout.anonymous.hackystat-sensorbase-uh,
     checkout.anonymous.hackystat-ui-systemstatus,
     checkout.anonymous.hackystat-ui-tickertape,
     checkout.anonymous.hackystat-ui-wicket,
     checkout.anonymous.hackystat-utilities" />

  <target name="checkout.anonymous.hackystat-analysis-dailyprojectdata" depends="check-install, checkout.anonymous.hackystat-sensorbase-uh">
    <git.clone.anonymous module.name="hackystat-analysis-dailyprojectdata" />
  </target>

  <target name="checkout.anonymous.hackystat-analysis-telemetry" depends="check-install, checkout.anonymous.hackystat-analysis-dailyprojectdata">
    <git.clone.anonymous module.name="hackystat-analysis-telemetry" />
  </target>

  <target name="checkout.anonymous.hackystat-developer-example" depends="check-install, checkout.anonymous.hackystat-analysis-telemetry">
    <git.clone.anonymous module.name="hackystat-developer-example" />
  </target>

  <target name="checkout.anonymous.hackystat-sensor-ant" depends="check-install, checkout.anonymous.hackystat-sensor-shell">
    <git.clone.anonymous module.name="hackystat-sensor-ant" />
  </target>

  <target name="checkout.anonymous.hackystat-sensor-eclipse" depends="check-install, checkout.anonymous.hackystat-sensor-shell">
    <git.clone.anonymous module.name="hackystat-sensor-eclipse" />
  </target>

  <target name="checkout.anonymous.hackystat-sensor-emacs" depends="check-install, checkout.anonymous.hackystat-sensor-shell">
    <git.clone.anonymous module.name="hackystat-sensor-emacs" />
  </target>

  <target name="checkout.anonymous.hackystat-sensor-example" depends="check-install, checkout.anonymous.hackystat-sensor-ant">
    <git.clone.anonymous module.name="hackystat-sensor-example" />
  </target>

  <target name="checkout.anonymous.hackystat-sensor-shell" depends="check-install, checkout.anonymous.hackystat-sensorbase-uh">
    <git.clone.anonymous module.name="hackystat-sensor-shell" />
  </target>

  <target name="checkout.anonymous.hackystat-sensor-vim" depends="check-install, checkout.anonymous.hackystat-sensor-shell">
    <git.clone.anonymous module.name="hackystat-sensor-vim" />
  </target>

  <target name="checkout.anonymous.hackystat-sensor-xmldata" depends="check-install, checkout.anonymous.hackystat-sensor-shell">
    <git.clone.anonymous module.name="hackystat-sensor-xmldata" />
  </target>

  <target name="checkout.anonymous.hackystat-sensorbase-postgres" depends="check-install, checkout.anonymous.hackystat-sensorbase-uh">
    <git.clone.anonymous module.name="hackystat-sensorbase-postgres" />
  </target>

  <target name="checkout.anonymous.hackystat-sensorbase-simdata" depends="check-install, checkout.anonymous.hackystat-sensorbase-uh">
    <git.clone.anonymous module.name="hackystat-sensorbase-simdata" />
  </target>

  <target name="checkout.anonymous.hackystat-sensorbase-uh" depends="check-install, checkout.anonymous.hackystat-utilities">
    <git.clone.anonymous module.name="hackystat-sensorbase-uh" />
  </target>

  <target name="checkout.anonymous.hackystat-ui-systemstatus" depends="check-install, checkout.anonymous.hackystat-sensorbase-uh">
    <git.clone.anonymous module.name="hackystat-ui-systemstatus" />
  </target>

  <target name="checkout.anonymous.hackystat-ui-tickertape" depends="check-install, checkout.anonymous.hackystat-analysis-telemetry">
    <git.clone.anonymous module.name="hackystat-ui-tickertape" />
  </target>

  <target name="checkout.anonymous.hackystat-ui-wicket" depends="check-install, checkout.anonymous.hackystat-analysis-telemetry, checkout.anonymous.hackystat-sensorbase-simdata">
    <git.clone.anonymous module.name="hackystat-ui-wicket" />
  </target>

  <target name="checkout.anonymous.hackystat-utilities" depends="check-install">
    <git.clone.anonymous module.name="hackystat-utilities" />
  </target>

  <!--
    The commit.{module} targets, in alphabetical order.
    Modules will also commit all dependent modules.
    You might want to run status.{module} first.
  -->

  <target name="commit.all" depends="check-install,
    commit.hackystat-analysis-dailyprojectdata,
    commit.hackystat-analysis-telemetry,
    commit.hackystat-sensor-ant,
    commit.hackystat-sensor-eclipse,
    commit.hackystat-sensor-emacs,
    commit.hackystat-sensor-example,
    commit.hackystat-sensor-shell,
    commit.hackystat-sensor-vim,
    commit.hackystat-sensor-xmldata,
    commit.hackystat-sensorbase-postgres,
    commit.hackystat-sensorbase-simdata,
    commit.hackystat-sensorbase-uh,
    commit.hackystat-ui-systemstatus,
    commit.hackystat-ui-tickertape,
    commit.hackystat-ui-wicket,
    commit.hackystat-utilities" />


  <target name="commit.hackystat-analysis-dailyprojectdata" depends="check-install, check-git-message, commit.hackystat-sensorbase-uh">
    <git.commit module.name="hackystat-analysis-dailyprojectdata" />
  </target>

  <target name="commit.hackystat-analysis-telemetry" depends="check-install, check-git-message, commit.hackystat-analysis-dailyprojectdata">
    <git.commit module.name="hackystat-analysis-telemetry" />
  </target>

  <target name="commit.hackystat-developer-example" depends="check-install, check-git-message, commit.hackystat-analysis-telemetry">
    <git.commit module.name="hackystat-developer-example" />
  </target>

  <target name="commit.hackystat-sensor-ant" depends="check-install, check-git-message, commit.hackystat-sensor-shell">
    <git.commit module.name="hackystat-sensor-ant" />
  </target>

  <target name="commit.hackystat-sensor-eclipse" depends="check-install, check-git-message, commit.hackystat-sensor-shell">
    <git.commit module.name="hackystat-sensor-eclipse" />
  </target>

  <target name="commit.hackystat-sensor-emacs" depends="check-install, check-git-message, commit.hackystat-sensor-shell">
    <git.commit module.name="hackystat-sensor-emacs" />
  </target>

  <target name="commit.hackystat-sensor-example" depends="check-install, check-git-message, commit.hackystat-sensor-ant">
    <git.commit module.name="hackystat-sensor-example" />
  </target>

  <target name="commit.hackystat-sensor-shell" depends="check-install, check-git-message, commit.hackystat-sensorbase-uh">
    <git.commit module.name="hackystat-sensor-shell" />
  </target>

  <target name="commit.hackystat-sensor-vim" depends="check-install, check-git-message, commit.hackystat-sensor-shell">
    <git.commit module.name="hackystat-sensor-vim" />
  </target>

  <target name="commit.hackystat-sensor-xmldata" depends="check-install, check-git-message, commit.hackystat-sensor-shell">
    <git.commit module.name="hackystat-sensor-xmldata" />
  </target>

  <target name="commit.hackystat-sensorbase-postgres" depends="check-install, check-git-message, commit.hackystat-sensorbase-uh">
    <git.commit module.name="hackystat-sensorbase-postgres" />
  </target>

  <target name="commit.hackystat-sensorbase-simdata" depends="check-install, check-git-message, commit.hackystat-sensorbase-uh">
    <git.commit module.name="hackystat-sensorbase-simdata" />
  </target>

  <target name="commit.hackystat-sensorbase-uh" depends="check-install, check-git-message, commit.hackystat-utilities">
    <git.commit module.name="hackystat-sensorbase-uh" />
  </target>

  <target name="commit.hackystat-ui-systemstatus" depends="check-install, check-git-message, commit.hackystat-sensorbase-uh">
    <git.commit module.name="hackystat-ui-systemstatus" />
  </target>

  <target name="commit.hackystat-ui-tickertape" depends="check-install, check-git-message, commit.hackystat-analysis-telemetry">
    <git.commit module.name="hackystat-ui-tickertape" />
  </target>

  <target name="commit.hackystat-ui-wicket" depends="check-install, check-git-message, commit.hackystat-analysis-telemetry, commit.hackystat-sensorbase-simdata">
    <git.commit module.name="hackystat-ui-wicket" />
  </target>

  <target name="commit.hackystat-utilities" depends="check-install, check-git-message">
    <git.commit module.name="hackystat-utilities" />
  </target>

  <!--
    The status.{module} targets, in alphabetical order.
    Modules will also check status of all dependent modules.
  -->

  <target name="status.all" depends="check-install,
    status.hackystat-analysis-dailyprojectdata,
    status.hackystat-analysis-telemetry,
    status.hackystat-sensor-ant,
    status.hackystat-sensor-eclipse,
    status.hackystat-sensor-emacs,
    status.hackystat-sensor-example,
    status.hackystat-sensor-shell,
    status.hackystat-sensor-vim,
    status.hackystat-sensor-xmldata,
    status.hackystat-sensorbase-postgres,
    status.hackystat-sensorbase-simdata,
    status.hackystat-sensorbase-uh,
    status.hackystat-ui-systemstatus,
    status.hackystat-ui-tickertape,
    status.hackystat-ui-wicket,
    status.hackystat-utilities" />


  <target name="status.hackystat-analysis-dailyprojectdata" depends="check-install, status.hackystat-sensorbase-uh">
    <git.status module.name="hackystat-analysis-dailyprojectdata" />
  </target>

  <target name="status.hackystat-analysis-telemetry" depends="check-install, status.hackystat-analysis-dailyprojectdata">
    <git.status module.name="hackystat-analysis-telemetry" />
  </target>

  <target name="status.hackystat-developer-example" depends="check-install, status.hackystat-analysis-telemetry">
    <git.status module.name="hackystat-developer-example" />
  </target>

  <target name="status.hackystat-sensor-ant" depends="check-install, status.hackystat-sensor-shell">
    <git.status module.name="hackystat-sensor-ant" />
  </target>

  <target name="status.hackystat-sensor-eclipse" depends="check-install, status.hackystat-sensor-shell">
    <git.status module.name="hackystat-sensor-eclipse" />
  </target>

  <target name="status.hackystat-sensor-emacs" depends="check-install, status.hackystat-sensor-shell">
    <git.status module.name="hackystat-sensor-emacs" />
  </target>

  <target name="status.hackystat-sensor-example" depends="check-install, status.hackystat-sensor-ant">
    <git.status module.name="hackystat-sensor-example" />
  </target>

  <target name="status.hackystat-sensor-shell" depends="check-install, status.hackystat-sensorbase-uh">
    <git.status module.name="hackystat-sensor-shell" />
  </target>

  <target name="status.hackystat-sensor-vim" depends="check-install, status.hackystat-sensor-shell">
    <git.status module.name="hackystat-sensor-vim" />
  </target>

  <target name="status.hackystat-sensor-xmldata" depends="check-install, status.hackystat-sensor-shell">
    <git.status module.name="hackystat-sensor-xmldata" />
  </target>

  <target name="status.hackystat-sensorbase-postgres" depends="check-install, status.hackystat-sensorbase-uh">
    <git.status module.name="hackystat-sensorbase-postgres" />
  </target>

  <target name="status.hackystat-sensorbase-simdata" depends="check-install, status.hackystat-sensorbase-uh">
    <git.status module.name="hackystat-sensorbase-simdata" />
  </target>

  <target name="status.hackystat-sensorbase-uh" depends="check-install, status.hackystat-utilities">
    <git.status module.name="hackystat-sensorbase-uh" />
  </target>

  <target name="status.hackystat-ui-systemstatus" depends="check-install, status.hackystat-sensorbase-uh">
    <git.status module.name="hackystat-ui-systemstatus" />
  </target>

  <target name="status.hackystat-ui-tickertape" depends="check-install, status.hackystat-analysis-telemetry">
    <git.status module.name="hackystat-ui-tickertape" />
  </target>

  <target name="status.hackystat-ui-wicket" depends="check-install, status.hackystat-analysis-telemetry, status.hackystat-sensorbase-simdata">
    <git.status module.name="hackystat-ui-wicket" />
  </target>

  <target name="status.hackystat-utilities" depends="check-install">
    <git.status module.name="hackystat-utilities" />
  </target>


  <!--
    Rebuild entire system.
    -->
  <target name="build-all" description="Build (and perhaps publish) all hackystat projects in order.">
    <ant antfile="hackystat-utilities/jar.build.xml" target="publish" inheritAll="false" />
    <ant antfile="hackystat-sensorbase-uh/jar.build.xml" target="publish" inheritAll="false" />
    <ant antfile="hackystat-sensorbase-postgres/jar.build.xml" target="publish" inheritAll="false" />
    <ant antfile="hackystat-analysis-dailyprojectdata/jar.build.xml" target="publish" inheritAll="false" />
    <ant antfile="hackystat-analysis-telemetry/jar.build.xml" target="publish" inheritAll="false" />
    <ant antfile="hackystat-sensor-shell/jar.build.xml" target="publish" inheritAll="false" />
    <ant antfile="hackystat-sensorbase-simdata/jar.build.xml" target="publish" inheritAll="false" />
    <ant antfile="hackystat-sensor-ant/jar.build.xml" target="publish" inheritAll="false" />
    <ant antfile="hackystat-sensor-xmldata/jar.build.xml" target="publish" inheritAll="false" />
    <ant antfile="hackystat-sensor-vim/build.xml" target="compile" inheritAll="false" />
    <!-- Cannot do this one except manually within directory.
    <ant antfile="hackystat-sensor-eclipse/build.xml" target="compile" inheritAll="false" />
    -->
    <ant antfile="hackystat-sensor-example/build.xml" target="compile" inheritAll="false" />
    <ant antfile="hackystat-ui-wicket/jar.build.xml" target="publish" inheritAll="false" />
    <ant antfile="hackystat-ui-tickertape/build.xml" target="compile" inheritAll="false" />
  </target>

  <!--
      Ivy download targets and locations.
   -->
  <property name="lib.dir" location="${basedir}/lib" />
  <property name="ivy.jar.path" location="${user.home}/.ivy2/ivyjar/" />
  <property name="library.versions.path" location="${user.home}/.hackystat/library.versions.properties" />
  <available file="${ivy.jar.path}/ivy.jar" property="ivy.jar.available" />
  <available file="${library.versions.path}" property="library.versions.available" />
  <available file="${basedir}/ivysettings.xml" property="ivysettings.available" />

  <target name="install" description="Downloads library version numbers, then downloads Ivy and ivysettings.xml">
    <antcall target="install.library.versions.properties" />
    <property file="${library.versions.path}" />
    <antcall target="install.ivy" />
    <antcall target="install.ivysettings.xml" />
  </target>

  <target name="install.ivy" description="Downloads Ivy into lib directory.">
    <mkdir dir="${ivy.jar.path}" />
    <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar" dest="${ivy.jar.path}/ivy.jar" usetimestamp="true" />
  </target>

  <target name="install.library.versions.properties" description="Downloads library.versions.properties into .hackystat directory.">
    <mkdir dir="${user.home}/.hackystat" />
    <get src="https://raw.github.com/hackystat/hackystat/master/configfiles/library.versions.properties" dest="${library.versions.path}" usetimestamp="true" />
  </target>

  <target name="install.ivysettings.xml" description="Downloads ivysettings.xml into .hackystat/ivy directory.">
    <get src="https://raw.github.com/hackystat/hackystat/master/configfiles/ivysettings.xml" dest="${basedir}/ivysettings.xml" usetimestamp="true" />
  </target>

  <target name="check-install" description="Fails build if Ivy installation is not OK.">
    <fail message="Error: ivysettings.xml not found. Please invoke 'ant install'." unless="ivysettings.available" />
    <fail message="Error: ivy.jar not found. Please invoke 'ant install'." unless="ivy.jar.available" />
    <fail message="Error: library.versions.properties not found. Please invoke 'ant install'." unless="library.versions.available" />
  </target>

  <!--
      Macros and other utilities to simplify coding of GIT targets.
   -->
  <target name="check-git-message" description="Fails build if git.message property is not set on command line.">
    <fail message='Error: You must provide a commit message. Example: ant -Dgit.message="Fix typo." commit.all' unless="git.message" />
  </target>

  <macrodef name="git.clone">
    <attribute name="module.name" />
    <sequential>
      <echo message="git clone @{module.name}" />
      <exec executable="git">
            <arg value="clone" />
            <arg value="git@github.com:hackystat/@{module.name}.git" />
            <arg value="@{module.name}" />
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="git.clone.anonymous">
    <attribute name="module.name" />
    <sequential>
      <echo message="git checkout @{module.name}" />
      <exec executable="git">
            <arg value="clone" />
            <arg value="https://github.com/hackystat/@{module.name}.git" />
            <arg value="@{module.name}" />
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="git.commit">
    <attribute name="module.name" />
    <sequential>
      <echo message="git commit @{module.name}" />
      <exec executable="git">
        <arg value="commit" />
        <arg value="--message" />
        <arg value="'${git.message}'" />
        <arg value="@{module.name}" />
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="git.status">
    <attribute name="module.name" />
    <sequential>
      <echo message="git status @{module.name}" />
      <exec executable="git" dir="@{module.name}">
          <arg value="status" />
          <arg value="--short" />
      </exec>
    </sequential>
  </macrodef>

  <!-- Helper target for verifying updates to build system. -->

  <target name="verify-all" description="Runs (almost) all Ant targets, including sensor targets, to make sure build system is working properly.">
    <!-- Using antcall instead of depends parameter to work around emma's need to create fresh class files and instrument
   			 them, which hoses any other tasks coming after that -->
    <!-- Call Emma first to get its weirdness out of the way first -->

    <fail unless="module.dir" message="Please provide -Dmodule.dir={module}" />
    <ant inheritAll="false" antfile="${module.dir}/emma.build.xml" />
    <ant inheritAll="false" antfile="${module.dir}/build.xml" target="clean" />
    <ant inheritAll="false" antfile="${module.dir}/build.xml" target="compile" />
    <ant inheritAll="false" antfile="${module.dir}/checkstyle.build.xml" />
    <ant inheritAll="false" antfile="${module.dir}/dependencyfinder.build.xml" />
    <ant inheritAll="false" antfile="${module.dir}/junit.build.xml" />
    <ant inheritAll="false" antfile="${module.dir}/pmd.build.xml" />
    <ant inheritAll="false" antfile="${module.dir}/findbugs.build.xml" />
    <ant inheritAll="false" antfile="${module.dir}/javadoc.build.xml" />
    <ant inheritAll="false" antfile="${module.dir}/javancss.build.xml" />
    <ant inheritAll="false" antfile="${module.dir}/sclc.build.xml" />
    <ant inheritAll="false" antfile="${module.dir}/dist.build.xml" />
    <fail message="FindBugs reported warnings." if="findbugs.warningsfound" />
  </target>

  <target name="delete-emacs-backups">
    <delete>
      <fileset dir="." includes="**/*~" defaultexcludes="no" />
      <fileset dir="." includes="**/cobertura*" defaultexcludes="no" />
    </delete>
  </target>

  <target name="update-sensor-files">
    <fail unless="module.dir" message="Please provide -Dmodule.dir={module}" />
    <copy file="hackystat-utilities/common.build.xml" tofile="${module.dir}/common.build.xml" overwrite="true" />
    <copy file="hackystat-utilities/checkstyle.build.xml" tofile="${module.dir}/checkstyle.build.xml" overwrite="true" />
    <copy file="hackystat-utilities/dependencyfinder.build.xml" tofile="${module.dir}/dependencyfinder.build.xml" overwrite="true" />
    <copy file="hackystat-utilities/emma.build.xml" tofile="${module.dir}/emma.build.xml" overwrite="true" />
    <copy file="hackystat-utilities/findbugs.build.xml" tofile="${module.dir}/findbugs.build.xml" overwrite="true" />
    <copy file="hackystat-utilities/javancss.build.xml" tofile="${module.dir}/javancss.build.xml" overwrite="true" />
    <copy file="hackystat-utilities/pmd.build.xml" tofile="${module.dir}/pmd.build.xml" overwrite="true" />
    <copy file="hackystat-utilities/sclc.build.xml" tofile="${module.dir}/sclc.build.xml" overwrite="true" />
  </target>

  <target name="propogate-changed-file">
    <fail unless="file.name" message="Please provide -Dfile.name={file.name}" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-analysis-dailyprojectdata/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-analysis-telemetry/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-sensor-ant/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-sensorbase-postgres/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-sensorbase-simdata/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-sensorbase-uh/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-sensor-eclipse/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-sensor-emacs/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-sensor-example/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-sensor-shell/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-sensor-vim/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-sensor-xmldata/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-ui-systemstatus/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-ui-tickertape/" overwrite="true" />
    <copy file="hackystat-utilities/${file.name}" todir="hackystat-ui-wicket/" overwrite="true" />
  </target>
</project>
