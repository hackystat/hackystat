<project name="integration.hudson" default="hudson.daily.build">
  <description>
  A set of tasks for doing integration/daily builds of Hackystat.
  </description>

  <!-- Overwrite the system build directory for hudson-related stuff. -->
  <property name="system.integration.root" location="${basedir}/hudson" />
  <property name="system.build.dir" location="${system.integration.root}/hackystat-integration" />
  <property name="system.sclc.dir" location="${system.build.dir}/hudson/sclc" />

  <mkdir dir="${system.build.dir}" />

  <import file="build.xml" />
  <import file="macros.build.xml" />
  <import file="dist.build.xml" />
  <import file="hackystat.build.xml" />

  <target name="hudson.daily.build" description="Checks out and builds all modules. ">
    <runHudsonTask task.name="hudson.daily.build" />
  </target>
  
  <target name="hudson.daily.jar"  description="Checks out and builds all modules. ">
    <ant dir="${system.build.dir}/${utilities.system.name}" antfile="jar.build.xml"  />
    <ant dir="${system.build.dir}/${sensorbase.system.name}" antfile="jar.build.xml"  />
    <ant dir="${system.build.dir}/${sensorshell.system.name}" antfile="jar.build.xml"  />
    <ant dir="${system.build.dir}/${dpd.system.name}" antfile="jar.build.xml"  />
    <ant dir="${system.build.dir}/${telemetry.system.name}" antfile="jar.build.xml"  />
    <ant dir="${system.build.dir}/${ant.system.name}" antfile="jar.build.xml"  />
    <ant dir="${system.build.dir}/${xmldata.system.name}" antfile="jar.build.xml"  />     
   </target>
  
  <target name="hudson.daily.sensors"  
     depends="hudson.daily.checkout, 
              hudson.daily.jar, 
              hudson.daily.javancss, 
              hudson.daily.junit, 
              hudson.daily.emma,
              hudson.daily.sclc"  
    description="Checks out the code, makes jar files, then runs tools and sensors."/>
  
  <target name="hudson.daily.junit"  description="JUnit plus sensor. ">
    <runHudsonTask task.name="hudson.daily.junit" />
    <antcall target="hudson.junit.sensor"/>
  </target>
  
  <target name="hudson.daily.javancss"  description="JavaNCSS plus sensor. ">
    <runHudsonTask task.name="hudson.daily.javancss" />
    <antcall target="hudson.javancss.sensor"/>
  </target>
    
  <target name="hudson.daily.emma" description="Emma plus sensor. ">
    <runHudsonTask task.name="hudson.daily.emma" />
    <antcall target="hudson.emma.sensor"/>
  </target>
  
  <target name="hudson.daily.dependencyfinder" description="DependencyFinder plus sensor. ">
    <runTask task.name="dependencyfinder.tool" build.file.name="dependencyfinder.build.xml"/>
    <antcall target="hudson.dependencyfinder.sensor"/>
   </target>
  

  <target name="hudson.daily.checkout" description="Anonymous check out/update of all projects from Google Project Hosting.">
    <!-- Current total: 17 -->
    <module.checkout.anonymous module.name="${ant.system.name}" />
    <module.checkout.anonymous module.name="${dpd.system.name}" />
    <module.checkout.anonymous module.name="${eclipse.system.name}" />
    <module.checkout.anonymous module.name="${emacs.system.name}" />
    <module.checkout.anonymous module.name="${pv.system.name}" />
    <module.checkout.anonymous module.name="${sdb.system.name}" />
    <module.checkout.anonymous module.name="${sdv.system.name}" />
    <module.checkout.anonymous module.name="${sensorbase.system.name}" />
    <module.checkout.anonymous module.name="${sensorshell.system.name}" />
    <module.checkout.anonymous module.name="${simdata.system.name}" />
    <module.checkout.anonymous module.name="${stackyhack.system.name}" />
    <module.checkout.anonymous module.name="${systemstatus.system.name}" />
    <module.checkout.anonymous module.name="${telemetry.system.name}" />
    <module.checkout.anonymous module.name="${tv.system.name}" />
    <module.checkout.anonymous module.name="${utilities.system.name}" />
    <module.checkout.anonymous module.name="${vim.system.name}" />
    <module.checkout.anonymous module.name="${xmldata.system.name}" />
  </target>

  <target name="hudson.daily.dist" description="Creates a distribution." depends="build.all,dist" />

  <target name="hudson.checkstyle.sensor" description="Send hackystat data about this Checkstyle invocation.">
    <fileset id="checkstyle.datafiles" dir="${system.build.dir}" includes="**/checkstyle/checkstyle.xml" />
    <hackystat.checkstyle checkstyle.datafiles.fileset="checkstyle.datafiles" verbose="${hackystat.verbose.mode}" />
  </target>

  <target name="hudson.junit.sensor" description="Send hackystat data about this JUnit invocation.">
    <fileset id="junit.datafiles" dir="${system.build.dir}" includes="**/junit/TEST-*.xml" />
    <fileset id="junit.sourcefiles" dir="${system.build.dir}" includes="**/src/**/*.java" excludes="**/jaxb/**" />
    <hackystat.junit junit.sourcefiles.fileset="junit.sourcefiles" junit.datafiles.fileset="junit.datafiles" verbose="${hackystat.verbose.mode}" />
  </target>

  <target name="hudson.findbugs.sensor" description="Send hackystat data about this FindBugs invocation.">
    <fileset id="findbugs.datafiles" dir="${system.build.dir}" includes="**/findbugs/findbugs.xml" />
    <hackystat.findbugs findbugs.datafiles.fileset="findbugs.datafiles" verbose="${hackystat.verbose.mode}" />
  </target>

  <target name="hudson.pmd.sensor" description="Send hackystat data about this PMD invocation.">
    <fileset id="pmd.datafiles" dir="${system.build.dir}" includes="**/pmd/pmd.xml" />
    <fileset id="pmd.sourcefiles" dir="${system.build.dir}" includes="**/src/**/*.java" excludes="**/jaxb/**" />
    <hackystat.pmd pmd.datafiles.fileset="pmd.datafiles" pmd.sourcefiles.fileset="pmd.sourcefiles" verbose="${hackystat.verbose.mode}" />
  </target>

  <target name="hudson.dependencyfinder.sensor" description="Send hackystat data about this DependencyFinder invocation.">
    <fileset id="dependencyfinder.sourcefiles" dir="${system.build.dir}" includes="**/src/**/*.java" excludes="**/jaxb/**"/>
    <fileset id="dependencyfinder.datafiles" dir="${system.build.dir}" includes="**/dependencyfinder/class2class.xml" />
    <hackystat.dependencyfinder dependencyfinder.datafiles.fileset="dependencyfinder.datafiles" dependencyfinder.sourcefiles.fileset="dependencyfinder.sourcefiles" verbose="${hackystat.verbose.mode}" />
   </target>
  
  <target name="hudson.javancss.sensor" description="Send hackystat data about this JavaNCSS invocation.">
    <fileset id="javancss.datafiles" dir="${system.build.dir}" includes="**/javancss/javancss.xml" />
    <fileset id="javancss.sourcefiles" dir="${system.build.dir}" includes="**/src/**/*.java" excludes="**/jaxb/**" />
    <hackystat.javancss javancss.datafiles.fileset="javancss.datafiles" javancss.sourcefiles.fileset="javancss.sourcefiles" verbose="${hackystat.verbose.mode}" />
  </target>
  
  <target name="hudson.emma.sensor" description="Send hackystat data about this Emma invocation.">
     <fileset id="emma.datafiles" dir="${system.build.dir}" includes="**/emma/coverage.xml" />
     <fileset id="emma.sourcefiles" dir="${system.build.dir}" includes="**/src/**/*.java" excludes="**/jaxb/**" />
     <hackystat.emma emma.datafiles.fileset="emma.datafiles" emma.sourcefiles.fileset="emma.sourcefiles" verbose="${hackystat.verbose.mode}" />
   </target>


  <target name="hudson.daily.sclc" description="Compute size data on the source code using SCLC, then send.">
    <!-- Check for the SCLC_HOME environment variable, failing the build if it can't be found. -->
    <available file="${env.SCLC_HOME}/src/sclc" property="sclc.available" />
    <fail unless="sclc.available" message="Error: SCLC_HOME not set or file 'sclc' not found, indicating SCLC is not installed." />
    <mkdir dir="${system.sclc.dir}" />
    <!-- Collect size data on src/ dir using SCLC.  Invoke Perl via the exec task to run SCLC. -->
    <exec executable="perl" dir="${basedir}">
      <arg line="${env.SCLC_HOME}/src/sclc -excludedir '\S*[\\\|/]build[\\\|/]\S*' -default_exclude -ignore -xml_output ${system.sclc.dir}/size.xml -recurse ${system.integration.root}" />
    </exec>
    <xslt in="${system.sclc.dir}/size.xml" out="${system.sclc.dir}/transform-size.xml" style="${system.build.dir}/hackystat-sensorbase-uh/lib/sclc/sclc.xsl" />
    <hackystat.sclc sclc.file="${system.sclc.dir}/transform-size.xml" />
  </target>

</project>





